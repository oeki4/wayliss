// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  firstName    String
  email        String         @unique
  password     String
  avatar       String?
  age          Int
  description  String
  Announcement Announcement[]
  Chat         Chat[]
  UserChat     UserChat[]
  Message      Message[]
}

model Announcement {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime @default(now())

  User   User @relation(fields: [userId], references: [id])
  userId Int

  AnnouncementPhoto AnnouncementPhoto[]
}

model AnnouncementPhoto {
  id   Int    @id @default(autoincrement())
  name String

  Announcement   Announcement @relation(fields: [announcementId], references: [id])
  announcementId Int
}

model Chat {
  id Int @id @default(autoincrement())

  User      User @relation(fields: [creatorId], references: [id])
  creatorId Int

  UserChat UserChat[]
  Message  Message[]
}

model UserChat {
  id     Int  @id @default(autoincrement())
  User   User @relation(fields: [userId], references: [id])
  userId Int

  Chat   Chat @relation(fields: [chatId], references: [id])
  chatId Int
}

model Message {
  id        Int      @id @default(autoincrement())
  type      String?  @default("text")
  createdAt DateTime @default(now())

  content String

  User   User @relation(fields: [userId], references: [id])
  userId Int

  Chat   Chat @relation(fields: [chatId], references: [id])
  chatId Int
}
